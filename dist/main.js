(()=>{"use strict";const t=t=>{localStorage.setItem("listOfProjects",JSON.stringify(t)),h()},e=t=>{localStorage.setItem("selectedProjectId",JSON.stringify(t)),h()},n=document.getElementById("new_project_input"),a=document.getElementById("project_form"),s=document.getElementById("data-projects"),d=document.getElementById("data-default-project"),l=document.getElementById("task_title"),i=document.getElementById("task_count"),o=document.getElementById("task_list"),c=document.getElementById("task_body"),r=document.getElementById("tasks"),m=document.getElementById("task_form"),u=document.getElementById("new_task_button"),p=document.getElementById("cancel_task_button"),g=document.getElementById("new_task_input"),y=document.getElementById("date"),k=document.getElementById("priority_dropdown");let f,E=[];d.addEventListener("click",(t=>{t.target.classList.add("active"),l.textContent="Default Project",i.textContent=null})),a.addEventListener("submit",(a=>{if(a.preventDefault(),null===n.value||""===n.value)return;const s=(d=n.value,{id:Date.now().toString(),item:d,tasks:[]});var d;n.value=null,E.push(s),t(E),e(f),v()})),m.addEventListener("submit",(n=>{n.preventDefault(),n.target.style.display="none",u.style.display="block";const a=g.value;if(null==a||""===a)return;const s=(d=a,{id:Date.now().toString(),item:d,date:y.value,priority:k.value,complete:!1});var d;g.value="",E.find((t=>t.id===f)).tasks.push(s),t(E),e(f),n.target.reset()}));const b=t=>{const e=t.tasks.filter((t=>!t.complete)).length;let n="";n=1===e?"task":"tasks",i.textContent=`${e} ${n} remaining`};s.addEventListener("click",(n=>{var a;f=n.target.getAttribute("data-key"),e(f),n.target.classList.contains("delete_project")&&(a=n.target.parentElement.getAttribute("data-key"),E=E.filter((t=>t.id!==a)),l.textContent="Select or Create a new project",i.textContent=null,t(E),d.classList.add("active"))})),o.addEventListener("click",(n=>{if("input"===n.target.tagName.toLowerCase()){const a=E.find((t=>t.id===f));a.tasks.find((t=>t.id===n.target.id)).complete=n.target.checked,t(E),e(f),b(a)}})),u.addEventListener("click",(t=>{t.target.style.display="none",m.style.display="block",r.appendChild(o)})),p.addEventListener("click",(()=>{m.style.display="none",u.style.display="block",m.reset()}));const v=()=>{(t=>{for(;t.childNodes[2];)t.removeChild(t.childNodes[2])})(s),(t=>{for(;t.firstChild;)t.removeChild(t.firstChild)})(c),E.forEach((t=>{const e=document.createElement("li");e.setAttribute("data-key",t.id),e.classList.add("new_project"),e.innerHTML=`${t.item} <button class="delete_project text-white bg-danger btn"><i class="fas fa-trash-alt"></i></button><br /><br />`,t.id===f&&(e.classList.add("active"),d.classList.remove("active")),s.appendChild(e)})),(()=>{const t=E.find((t=>t.id===f));f&&(l.textContent=t.item,b(t),t.tasks.forEach((t=>{const e=document.createElement("input");e.setAttribute("type","checkbox"),e.setAttribute("class","check_box"),e.id=t.id,e.checked=t.complete;const n=document.createElement("label");n.className="my-3 w-50",n.htmlFor=t.id,n.innerHTML=`<span class="font-weight-bold">Task Descrition:</span> ${t.item}<br/>\n        <span class="font-weight-bold">Task Date:</span> ${t.date}<br/> \n        <span class="font-weight-bold">Task Priority:</span> ${t.priority}`,n.appendChild(e),c.appendChild(n),o.appendChild(c)})))})()};(()=>{const t=localStorage.getItem("listOfProjects"),e=localStorage.getItem("selectedProjectId");t&&(E=JSON.parse(t),v()),e&&(f=JSON.parse(e),v())})();const h=v;h()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,